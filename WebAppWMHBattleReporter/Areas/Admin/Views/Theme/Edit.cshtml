@model ThemeViewModel
@using WebAppWMHBattleReporter.Extensions
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (!String.IsNullOrWhiteSpace(Model.StatusMessage))
{
    <partial name="_StatusMessage" model="@Model.StatusMessage" />
}

    <div class="border applicationFormGroup row">
        <div class="col-12">
            <h2 class="text-info">Edit Theme</h2>
            <br />
        </div>
        <div class="col-8 border-right">
            <form asp-action="Edit">
                <input type="hidden" asp-for="@Model.Theme.Id" />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group row">
                    <div class="col-md-3 col-sm-12">
                        <label asp-for="Theme.FactionId" class="col-form-label">Faction</label>
                    </div>
                    <div class="col-md-9 col-sm-12">
                        <select id="FactionList" asp-for="Theme.FactionId" asp-items="Model.Factions.ToSelectListItem(Model.Theme.FactionId)" class="form-control"></select>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-3 col-sm-12">
                        <label asp-for="Theme.Name" class="col-form-label"></label>
                    </div>
                    <div class="col-md-9 col-sm-12">
                        <input asp-for="Theme.Name" class="form-control" />
                    </div>
                    <span asp-validation-for="Theme.Name" class="text-danger"></span>
                </div>
                <div class="form-group row">
                    <div class="col-md-9 col-sm-12 offset-md-3">
                        <partial name="_EditAndBackToListButtons" />
                    </div>
                </div>
            </form>
        </div>
        <div class="col-4">
            @if (Model.Themes.Count() > 0)
            {
                <div id="ThemeList">
                    <table class="table table-striped border">
                        <tr class="table-secondary">
                            <th>Existing Themes</th>
                        </tr>
                    </table>
                </div>
            }
        </div>
    </div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        function updateThemeList() {
            var factionSelected = document.getElementById("FactionList").value;

            $list = $('#ThemeList');

            $.ajax({
                url: '/Admin/Theme/GetThemes/' + factionSelected,
                type: 'GET',
                dataType: 'text',
                success: function (data) {
                    results = JSON.parse(data);
                    $list.html('');
                    var newTable = '<table class="table table-striped border"><tr class="table-secondary"><th>Existing Themes</th></tr>';
                    for (i in results) {
                        newTable += ('<tr><td>' + results[i].text + '</td></tr>');
                    }
                    newTable += '</table>';
                    $list.html(newTable);
                }
            });
        }

        $(document).ready(function () {
            updateThemeList();
        });

        $("#FactionList").on("change", function () {
            updateThemeList();
        });
    </script>
}